name: allocation CI

'on':
  schedule:
    - cron: '30 5 * * 1'
  pull_request:
  push:
    branches:
      - main
      - develop

env:
  UBSAN_OPTIONS: print_stacktrace=1

jobs:
  posix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            make-target: test-debug
            compiler: g++-14
            description: "Debug build"
          
          - os: ubuntu-24.04
            make-target: test-release
            compiler: g++-14
            description: "Release build"

    name: '${{matrix.os}}: ${{matrix.info}}'
    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake pipx pycodestyle postgresql postgresql-client redis-server
          pipx ensurepath
          pipx install conan
          export PATH="/root/.local/bin:$PATH"

      - name: Setup PostgreSQL
        run: |
          sudo pg_lsclusters
          sudo pg_dropcluster --stop 16 main || true
          sudo pg_createcluster 16 main --start -p 5432
          sudo -u postgres psql --command='CREATE USER "user" WITH PASSWORD '\''password'\'';'
          sudo -u postgres createdb --owner="user" allocation
          echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
          echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
          echo "POSTGRES_DB=allocation" >> $GITHUB_ENV
          echo "POSTGRES_USER=user" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=password" >> $GITHUB_ENV

      - name: Setup Redis
        run: |
          sudo systemctl start redis-server
          # Use default Redis port 6379 instead of parsing config file
          echo "REDIS_HOST=localhost" >> $GITHUB_ENV
          echo "REDIS_PORT=6379" >> $GITHUB_ENV

      - name: Run migrations
        run: |
          # Set environment variables for this step since $GITHUB_ENV doesn't affect current step
          export POSTGRES_HOST=localhost
          export POSTGRES_PORT=5432
          export POSTGRES_DB=allocation
          export POSTGRES_USER=user
          export POSTGRES_PASSWORD=password
          psql "postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB" -f ./postgresql/schemas/db-1.sql


      - name: Run build
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: allocation
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: make ${{matrix.make-target}}

      - name: Test install
        if: matrix.make-target == 'test-release'
        run: |
          make dist-clean
          make install PREFIX=`pwd`/local_installation/

      - name: Test run after install
        if: matrix.make-target == 'test-release'
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: allocation
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: |
          ./local_installation/bin/allocation &   # сервис запускается в фоне
          sleep 5

      - name: Check service
        if: matrix.make-target == 'test-release'
        run: |
          ps aux | grep allocation | grep config && curl http://localhost:8080/ping -v

      - name: Run e2e test
        if: matrix.make-target == 'test-release'
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: allocation
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        run: make e2e-test

      - name: Stop all
        if: matrix.make-target == 'test-release'
        run: killall allocation
